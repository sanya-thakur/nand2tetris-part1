// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/b/RAM4K.hdl
/**
 * Memory of 4K 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Split the address: the top 3 bits determine which RAM512 to use
    // The bottom 9 bits are passed to the selected RAM512 module.
    
    Mux8Way16(a=ram0Out, b=ram1Out, c=ram2Out, d=ram3Out,
              e=ram4Out, f=ram5Out, g=ram6Out, h=ram7Out,
              sel=address[9..11], out=out);

    DMux8Way(in=load, sel=address[9..11],
             a=load0, b=load1, c=load2, d=load3,
             e=load4, f=load5, g=load6, h=load7);

    RAM512(in=in, load=load0, address=address[0..8], out=ram0Out);
    RAM512(in=in, load=load1, address=address[0..8], out=ram1Out);
    RAM512(in=in, load=load2, address=address[0..8], out=ram2Out);
    RAM512(in=in, load=load3, address=address[0..8], out=ram3Out);
    RAM512(in=in, load=load4, address=address[0..8], out=ram4Out);
    RAM512(in=in, load=load5, address=address[0..8], out=ram5Out);
    RAM512(in=in, load=load6, address=address[0..8], out=ram6Out);
    RAM512(in=in, load=load7, address=address[0..8], out=ram7Out);
}
